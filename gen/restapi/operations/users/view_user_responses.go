// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/go-swagger/go-swagger/examples/ShivaniCustomServerExample1/gen/models"
)

// ViewUserOKCode is the HTTP code returned for type ViewUserOK
const ViewUserOKCode int = 200

/*ViewUserOK list the particular User operations

swagger:response viewUserOK
*/
type ViewUserOK struct {

	/*
	  In: Body
	*/
	Payload *models.User `json:"body,omitempty"`
}

// NewViewUserOK creates ViewUserOK with default headers values
func NewViewUserOK() *ViewUserOK {

	return &ViewUserOK{}
}

// WithPayload adds the payload to the view user o k response
func (o *ViewUserOK) WithPayload(payload *models.User) *ViewUserOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the view user o k response
func (o *ViewUserOK) SetPayload(payload *models.User) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ViewUserOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ViewUserNotFoundCode is the HTTP code returned for type ViewUserNotFound
const ViewUserNotFoundCode int = 404

/*ViewUserNotFound user is not found

swagger:response viewUserNotFound
*/
type ViewUserNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewViewUserNotFound creates ViewUserNotFound with default headers values
func NewViewUserNotFound() *ViewUserNotFound {

	return &ViewUserNotFound{}
}

// WithPayload adds the payload to the view user not found response
func (o *ViewUserNotFound) WithPayload(payload *models.Error) *ViewUserNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the view user not found response
func (o *ViewUserNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ViewUserNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*ViewUserDefault generic error response

swagger:response viewUserDefault
*/
type ViewUserDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewViewUserDefault creates ViewUserDefault with default headers values
func NewViewUserDefault(code int) *ViewUserDefault {
	if code <= 0 {
		code = 500
	}

	return &ViewUserDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the view user default response
func (o *ViewUserDefault) WithStatusCode(code int) *ViewUserDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the view user default response
func (o *ViewUserDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the view user default response
func (o *ViewUserDefault) WithPayload(payload *models.Error) *ViewUserDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the view user default response
func (o *ViewUserDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ViewUserDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
